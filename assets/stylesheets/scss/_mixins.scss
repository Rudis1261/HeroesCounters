/* ==========================================================================
   Mixins
   ========================================================================== */

@mixin vendor($property, $value){
    -webkit-#{$property}:$value;
    -moz-#{$property}:$value;
    -ms-#{$property}:$value;
    -o-#{$property}:$value;
    #{$property}:$value;
}

@mixin clearfix() {
    &:before,
    &:after {
        content: " "; // 1
        display: table; // 2
    }
    &:after {
        clear: both;
    }
}

@mixin noselect() {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

@mixin linearGradient($top, $bottom, $important: false){
    @if ($important == 'important' or $important == true) {
        background: $top!important; /* Old browsers */
        background: -moz-linear-gradient(top,  $top 0%, $bottom 100%)!important; /* FF3.6+ */
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$top), color-stop(100%,$bottom))!important; /* Chrome,Safari4+ */
        background: -webkit-linear-gradient(top,  $top 0%,$bottom 100%)!important; /* Chrome10+,Safari5.1+ */
        background: -o-linear-gradient(top,  $top 0%,$bottom 100%)!important; /* Opera 11.10+ */
        background: -ms-linear-gradient(top,  $top 0%,$bottom 100%)!important; /* IE10+ */
        background: linear-gradient(to bottom,  $top 0%,$bottom 100%)!important; /* W3C */
        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000', GradientType=0)!important; /* IE6-9 */
    }
    @else {
        background: $top; /* Old browsers */
        background: -moz-linear-gradient(top,  $top 0%, $bottom 100%); /* FF3.6+ */
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$top), color-stop(100%,$bottom)); /* Chrome,Safari4+ */
        background: -webkit-linear-gradient(top,  $top 0%,$bottom 100%); /* Chrome10+,Safari5.1+ */
        background: -o-linear-gradient(top,  $top 0%,$bottom 100%); /* Opera 11.10+ */
        background: -ms-linear-gradient(top,  $top 0%,$bottom 100%); /* IE10+ */
        background: linear-gradient(to bottom,  $top 0%,$bottom 100%); /* W3C */
        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000',GradientType=0 ); /* IE6-9 */
    }
}

@mixin horizontalGradient($from, $to, $stop: 100%) {
    background-color: $from;
    background-image: -moz-linear-gradient(left, $from 0%, $to $stop);
    background-image: -webkit-linear-gradient(left, $from 0%, $to $stop);
    background-image: -o-linear-gradient(left, $from 0%, $to $stop);
    background: -ms-linear-gradient(left, $from 0%, $to $stop);
    background: linear-gradient(to right, $from 0%, $to $stop);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$from', endColorstr='$to', GradientType=1);
}

@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: ($opacity * 100);
    filter: alpha(opacity=$opacity-ie);
}

@mixin background-opacity($color, $opacity: 0.8) {
    background: $color !important; /* The Fallback */
    background: rgba($color, $opacity) !important;
}

@mixin border-radius($radius){
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    border-radius: $radius;
}

@mixin sharpen-image {
  image-rendering: -o-crisp-edges;
  image-rendering: -webkit-optimize-contrast;
  -ms-interpolation-mode: nearest-neighbor;
}

@mixin animation($animation) {
    -webkit-animation: $animation;
    -o-animation: $animation;
    animation: $animation;
}
@mixin animation-name($name) {
    -webkit-animation-name: $name;
    animation-name: $name;
}
@mixin animation-duration($duration) {
    -webkit-animation-duration: $duration;
    animation-duration: $duration;
}
@mixin animation-timing-function($timing-function) {
    -webkit-animation-timing-function: $timing-function;
    animation-timing-function: $timing-function;
}
@mixin animation-delay($delay) {
    -webkit-animation-delay: $delay;
    animation-delay: $delay;
}
@mixin animation-iteration-count($iteration-count) {
    -webkit-animation-iteration-count: $iteration-count;
    animation-iteration-count: $iteration-count;
}
@mixin animation-direction($direction) {
    -webkit-animation-direction: $direction;
    animation-direction: $direction;
}
@mixin animation-fill-mode($fill-mode) {
    -webkit-animation-fill-mode: $fill-mode;
    animation-fill-mode: $fill-mode;
}

@mixin box-shadow($shadow...) {
    -webkit-box-shadow: $shadow; // iOS <4.3 & Android <4.1
    box-shadow: $shadow;
}

@mixin box-sizing($boxmodel) {
    -webkit-box-sizing: $boxmodel;
    -moz-box-sizing: $boxmodel;
    box-sizing: $boxmodel;
}

// CSS3 Content Columns
@mixin content-columns($column-count, $column-gap: $grid-gutter-width) {
    -webkit-column-count: $column-count;
    -moz-column-count: $column-count;
    column-count: $column-count;
    -webkit-column-gap: $column-gap;
    -moz-column-gap: $column-gap;
    column-gap: $column-gap;
}

@mixin transition($trans) {
    -webkit-transition: $trans;
    -moz-transition: $trans;
    -o-transition: $trans;
    transition: $trans;
}

@mixin keyframes($animationName) {
    @-webkit-keyframes #{$animationName} {
        @content;
    }

    @-moz-keyframes #{$animationName} {
        @content;
    }

    @-o-keyframes #{$animationName} {
        @content;
    }

    @keyframes #{$animationName} {
        @content;
    }
}

@mixin transform($trans, $important: false) {
    -webkit-transform: $trans;
    -moz-transform: $trans;
    -ms-transform: $trans;
    -o-transform: $trans;
    transform: $trans;

    @if ($important == true) {
        -webkit-transform: $trans!important;
        -moz-transform: $trans!important;
        -ms-transform: $trans!important;
        -o-transform: $trans!important;
        transform: $trans!important;
    }
}

@mixin transform-style($trans) {
    -webkit-transform-style: $trans;
    -moz-transform-style: $trans;
    -ms-transform-style: $trans;
    -o-transform-style: $trans;
    transform-style: $trans;
}

@mixin scale($ratio...) {
    -webkit-transform: scale($ratio);
    -ms-transform: scale($ratio); // IE9 only
    -o-transform: scale($ratio);
    transform: scale($ratio);
}

@mixin scaleX($ratio) {
    -webkit-transform: scaleX($ratio);
    -ms-transform: scaleX($ratio); // IE9 only
    -o-transform: scaleX($ratio);
    transform: scaleX($ratio);
}
@mixin scaleY($ratio) {
    -webkit-transform: scaleY($ratio);
    -ms-transform: scaleY($ratio); // IE9 only
    -o-transform: scaleY($ratio);
    transform: scaleY($ratio);
}
@mixin skew($x, $y) {
    -webkit-transform: skewX($x) skewY($y);
    -ms-transform: skewX($x) skewY($y); // See https://github.com/twbs/bootstrap/issues/4885; IE9+
    -o-transform: skewX($x) skewY($y);
    transform: skewX($x) skewY($y);
}
@mixin translate($x, $y) {
    -webkit-transform: translate($x, $y);
    -ms-transform: translate($x, $y); // IE9 only
    -o-transform: translate($x, $y);
    transform: translate($x, $y);
}
@mixin translate3d($x, $y, $z) {
    -webkit-transform: translate3d($x, $y, $z);
    transform: translate3d($x, $y, $z);
}
@mixin rotate($degrees) {
    -webkit-transform: rotate($degrees);
    -ms-transform: rotate($degrees); // IE9 only
    -o-transform: rotate($degrees);
    transform: rotate($degrees);
}
@mixin rotateX($degrees) {
    -webkit-transform: rotateX($degrees);
    -ms-transform: rotateX($degrees); // IE9 only
    -o-transform: rotateX($degrees);
    transform: rotateX($degrees);
}
@mixin rotateY($degrees) {
    -webkit-transform: rotateY($degrees);
    -ms-transform: rotateY($degrees); // IE9 only
    -o-transform: rotateY($degrees);
    transform: rotateY($degrees);
}
@mixin perspective($perspective) {
    -webkit-perspective: $perspective;
    -moz-perspective: $perspective;
    perspective: $perspective;
}
@mixin perspective-origin($perspective) {
    -webkit-perspective-origin: $perspective;
    -moz-perspective-origin: $perspective;
    perspective-origin: $perspective;
}
@mixin transform-origin($origin) {
    -webkit-transform-origin: $origin;
    -moz-transform-origin: $origin;
    -ms-transform-origin: $origin; // IE9 only
    transform-origin: $origin;
}

@mixin transition($transition...) {
    -webkit-transition: $transition;
    -o-transition: $transition;
    transition: $transition;
}
@mixin transition-property($transition-property...) {
    -webkit-transition-property: $transition-property;
    transition-property: $transition-property;
}
@mixin transition-delay($transition-delay) {
    -webkit-transition-delay: $transition-delay;
    transition-delay: $transition-delay;
}
@mixin transition-duration($transition-duration...) {
    -webkit-transition-duration: $transition-duration;
    transition-duration: $transition-duration;
}
@mixin transition-timing-function($timing-function) {
    -webkit-transition-timing-function: $timing-function;
    transition-timing-function: $timing-function;
}
@mixin transition-transform($transition...) {
    -webkit-transition: -webkit-transform $transition;
    -moz-transition: -moz-transform $transition;
    -o-transition: -o-transform $transition;
    transition: transform $transition;
}

@mixin ms-flex-align($direction: column) {
    -ms-flex-pack: center;
    -ms-flex-direction: $direction;
}

@mixin flex-direction($direction: row) {
    -webkit-flex-direction: $direction;
    -ms-flex-direction: $direction;
    flex-direction: $direction;
}

@mixin flex-wrap($wrap: nowrap) {
    @if $wrap == nowrap {
        -ms-flex-wrap: none;
    }
    @else {
        -ms-flex-wrap: $wrap;
    }
    -webkit-flex-wrap: $wrap;
    flex-wrap: $wrap;
}

@mixin flex-order($order: 0) {
    -ms-flex-order: $order;
    -webkit-order: $order;
    -ms-order: $order;
    order: $order;
}

@mixin justify-content($justify: flex-start) {
    @if $justify == flex-start {
        -ms-flex-pack: start;
    }
    @else if $justify == flex-end {
        -ms-flex-pack: end;
    }
    @elseif $justify == space-between {
        -ms-flex-pack: justify;
    }
    @else {
        -ms-flex-pack: $justify;
    }
    -webkit-justify-content: $justify;
    -ms-justify-content: $justify;
    justify-content: $justify;
}

@mixin align-items($align: auto) {
    @if $align == flex-start {
        -ms-flex-align: start;
    }
    @else if $align == flex-end {
        -ms-flex-align: end;
    }
    @else {
        -ms-flex-align: $align;
    }
    -webkit-align-items: $align;
    -ms-align-items: $align;
    align-items: $align;
}

@mixin align-content($align: auto) {
    @if $align == flex-start {
        -ms-flex-line-pack: start;
    }
    @else if $align == flex-end {
        -ms-flex-line-pack: end;
    }
    @else {
        -ms-flex-line-pack: $align;
    }
    -webkit-align-content: $align;
    -ms-align-content: $align;
    align-content: $align;
}

@mixin align-self($align: auto) {
    @if $align == flex-start {
        -ms-flex-item-align: start;
    }
    @else if $align == flex-end {
        -ms-flex-item-align: end;
    }
    @else {
        -ms-flex-item-align: $align;
    }
    -webkit-align-self: $align;
    -ms-align-self: $align;
    align-self: $align;
}

@mixin flex($value, $important: false){
    @if ($important) {
        -webkit-box-flex: $value!important;
        -moz-box-flex: $value!important;
        -webkit-flex: $value!important;
        -ms-flex: $value!important;
        flex: $value!important;
    }
    @else {
        -webkit-box-flex: $value;
        -moz-box-flex: $value;
        -webkit-flex: $value;
        -ms-flex: $value;
        flex: $value;
    }
}

@mixin placeholder {
    ::-webkit-input-placeholder {@content}
    :-moz-placeholder           {@content}
    ::-moz-placeholder          {@content}
    :-ms-input-placeholder      {@content}
}

@mixin flex-inline($important: false){
    @if ($important) {
        display: -webkit-inline-box!important;
        display: -ms-inline-flexbox!important;
        display: inline-flex!important;
    }
    @else {
        display: -webkit-inline-box;
        display: -ms-inline-flexbox;
        display: inline-flex;
    }
}

@mixin ie-only {
    @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
        @content;
    }
}

@mixin firefox-only {
    @-moz-document url-prefix() {
        @content;
    }
}

@mixin flex-display($important: false){
    @if ($important) {
        display: -webkit-box!important;
        display: -moz-box!important;
        display: -ms-flexbox!important;
        display: -webkit-flex!important;
        display: flex!important;
    }
    @else {
        display: -webkit-box;
        display: -moz-box;
        display: -ms-flexbox;
        display: -webkit-flex;
        display: flex;
    }
}

@mixin flex-inline($important: false){
    @if ($important) {
        display: -webkit-inline-box!important;
        display: -moz-inline-box!important;
        display: -ms-inline-flexbox!important;
        display: -webkit-inline-flex!important;
        display: inline-flex!important;
    }
    @else {
        display: -webkit-inline-box;
        display: -moz-inline-box;
        display: -ms-inline-flexbox;
        display: -webkit-inline-flex;
        display: inline-flex;
    }
}

@mixin respond-from($size) {
    @media screen and (min-width: $size) {
        @content;
    }
}

@mixin respond-to($size) {
    @media screen and (max-width: $size) {
        @content;
    }
}

@mixin respond-between($lower, $upper) {
    @media screen and (min-width: $lower) and (max-width: $upper) {
        @content;
    }
}

@mixin mobile {
    @include respond-to($screenTablet) {
        @content;
    }
}

@mixin desktop {
    @include respond-from($screenTablet) {
        @content;
    }
}

@mixin font-bold($size:false, $lineHeight:false, $important:false) {
    font-weight: 700;
    font-family: $headingFont;

    @if ($lineHeight) {
        line-height: $lineHeight;
    }

    @if ($size) {
        font-size: $size;
    }

    @if ($important) {
        font-weight: 700!important;
        font-family: $headingFont!important;

        @if ($size) {
            font-size: $size!important;
        }

        @if ($lineHeight) {
            line-height: $lineHeight!important;
        }
    }
}

@mixin font-normal($size:false, $lineHeight:false, $important:false) {
    font-weight: normal;
    font-family: $contentFont;

    @if ($size) {
        font-size: $size;
    }

    @if ($lineHeight) {
        line-height: $lineHeight;
    }

    @if ($important) {
        font-weight: normal!important;
        font-family: $contentFont!important;

        @if ($size) {
            font-size: $size!important;
        }

        @if ($lineHeight) {
            line-height: $lineHeight!important;
        }
    }
}

@mixin heading($size:false, $lineHeight:false, $important:false) {
    font-family: $headingFontBold;

    @if ($size) {
        font-size: $size;
    }
    @if ($lineHeight) {
        line-height: $lineHeight;
    }

    @if ($important) {
        font-family: $headingFontBold!important;

        @if ($size) {
            font-size: $size!important;
        }
        @if ($lineHeight) {
            line-height: $lineHeight!important;
        }
    }
}